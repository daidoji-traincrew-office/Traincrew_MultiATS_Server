name: Master Data Update

on:
  workflow_dispatch:

env:
  DATA_DIR: Traincrew_MultiATS_Server.Crew/Data

jobs:
  update-master-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.2.2

      - name: Set up Node.js
        uses: actions/setup-node@v4.4.0
        with:
          node-version: '20'

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2.1.13
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2.2.1

      - name: Install dependencies
        run: npm install @googleapis/sheets

      - name: Export spreadsheets to CSV
        run: node .github/scripts/export-master-data.js
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ steps.auth.outputs.credentials_file_path }}

      - name: Set branch name
        id: branch
        run: |
          BRANCH_NAME="master_update/$(date +'%Y%m%d')"
          echo "name=$BRANCH_NAME" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create and push branch
        run: |
          git checkout -b ${{ steps.branch.outputs.name }} || git checkout ${{ steps.branch.outputs.name }}
          git add ${{ env.DATA_DIR }}
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          git commit -m "マスター更新 $(date +'%Y%m%d')"
          git push -u origin ${{ steps.branch.outputs.name }}

      - name: Check if PR exists
        id: check_pr
        run: |
          PR_EXISTS=$(gh pr list --head ${{ steps.branch.outputs.name }} --json number --jq 'length')
          echo "exists=$PR_EXISTS" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: steps.check_pr.outputs.exists == '0'
        run: |
          gh pr create \
            --title "マスター更新 $(date +'%Y%m%d')" \
            --body "$(cat <<'EOF'
          ## 概要
          Googleスプレッドシートからマスターデータを更新しました。

          ## 更新内容
          - 連動図表データ
          - サーバーマスタデータ

          ## 確認事項
          - [ ] データの整合性を確認
          - [ ] テストの実行を確認

          🤖 Generated by GitHub Actions
          EOF
          )"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}